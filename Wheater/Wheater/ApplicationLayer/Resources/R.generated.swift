//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var font: font { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func font(bundle: Foundation.Bundle) -> font {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.font.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 11 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: %d-Day Forecast
      ///
      /// Key: weather.dayForecast
      ///
      /// Locales: en
      var weatherDayForecast: RswiftResources.StringResource1<Int> { .init(key: "weather.dayForecast", tableName: "Localizable", source: source, developmentValue: "%d-Day Forecast", comment: nil) }

      /// en translation: Feels like %d°
      ///
      /// Key: weather.feels
      ///
      /// Locales: en
      var weatherFeels: RswiftResources.StringResource1<Int> { .init(key: "weather.feels", tableName: "Localizable", source: source, developmentValue: "Feels like %d°", comment: nil) }

      /// en translation: Friday
      ///
      /// Key: weather.friday
      ///
      /// Locales: en
      var weatherFriday: RswiftResources.StringResource { .init(key: "weather.friday", tableName: "Localizable", source: source, developmentValue: "Friday", comment: nil) }

      /// en translation: Monday
      ///
      /// Key: weather.monday
      ///
      /// Locales: en
      var weatherMonday: RswiftResources.StringResource { .init(key: "weather.monday", tableName: "Localizable", source: source, developmentValue: "Monday", comment: nil) }

      /// en translation: Now
      ///
      /// Key: weather.now
      ///
      /// Locales: en
      var weatherNow: RswiftResources.StringResource { .init(key: "weather.now", tableName: "Localizable", source: source, developmentValue: "Now", comment: nil) }

      /// en translation: Saturday
      ///
      /// Key: weather.saturday
      ///
      /// Locales: en
      var weatherSaturday: RswiftResources.StringResource { .init(key: "weather.saturday", tableName: "Localizable", source: source, developmentValue: "Saturday", comment: nil) }

      /// en translation: Sunday
      ///
      /// Key: weather.sunday
      ///
      /// Locales: en
      var weatherSunday: RswiftResources.StringResource { .init(key: "weather.sunday", tableName: "Localizable", source: source, developmentValue: "Sunday", comment: nil) }

      /// en translation: Thursday
      ///
      /// Key: weather.thursday
      ///
      /// Locales: en
      var weatherThursday: RswiftResources.StringResource { .init(key: "weather.thursday", tableName: "Localizable", source: source, developmentValue: "Thursday", comment: nil) }

      /// en translation: Today
      ///
      /// Key: weather.today
      ///
      /// Locales: en
      var weatherToday: RswiftResources.StringResource { .init(key: "weather.today", tableName: "Localizable", source: source, developmentValue: "Today", comment: nil) }

      /// en translation: Tuesday
      ///
      /// Key: weather.tuesday
      ///
      /// Locales: en
      var weatherTuesday: RswiftResources.StringResource { .init(key: "weather.tuesday", tableName: "Localizable", source: source, developmentValue: "Tuesday", comment: nil) }

      /// en translation: Wednesday
      ///
      /// Key: weather.wednesday
      ///
      /// Locales: en
      var weatherWednesday: RswiftResources.StringResource { .init(key: "weather.wednesday", tableName: "Localizable", source: source, developmentValue: "Wednesday", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 1 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `Сloud`.
    var сloud: ImageResource { .init(name: "Сloud", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.font` struct is generated, and contains static references to 1 fonts.
  struct font: Sequence {
    let bundle: Foundation.Bundle

    /// Font `HelveticaNeue-Thin`.
    var helveticaNeueThin: RswiftResources.FontResource { .init(name: "HelveticaNeue-Thin", bundle: bundle, filename: "HelveticaNeue-Thin.otf") }

    func makeIterator() -> IndexingIterator<[RswiftResources.FontResource]> {
      [helveticaNeueThin].makeIterator()
    }
    func validate() throws {
      for font in self {
        if !font.canBeLoaded() { throw RswiftResources.ValidationError("[R.swift] Font '\(font.name)' could not be loaded, is '\(font.filename)' added to the UIAppFonts array in this targets Info.plist?") }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 2 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `BackgroundVideo.mp4`.
    var backgroundVideoMp4: RswiftResources.FileResource { .init(name: "BackgroundVideo", pathExtension: "mp4", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `HelveticaNeue-Thin.otf`.
    var helveticaNeueThinOtf: RswiftResources.FileResource { .init(name: "HelveticaNeue-Thin", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}